class Solution {
    public boolean isValidSudoku(char[][] board) {
        // 检查每一行
        for (int i = 0; i < board.length; i++) {
            HashSet<Character> set = new HashSet<>();
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] != '.' && !set.add(board[i][j])) {
                    return false;
                }
            }
        }

        // 检查每一列
        for (int j = 0; j < board[0].length; j++) {
            HashSet<Character> set = new HashSet<>();
            for (int i = 0; i < board.length; i++) {
                if (board[i][j] != '.' && !set.add(board[i][j])) {
                    return false;
                }
            }
        }

        // 检查每个3x3子区域
        for (int block = 0; block < 9; block++) {
            HashSet<Character> set = new HashSet<>();
            for (int i = block / 3 * 3; i < block / 3 * 3 + 3; i++) {
                for (int j = block % 3 * 3; j < block % 3 * 3 + 3; j++) {
                    if (board[i][j] != '.' && !set.add(board[i][j])) {
                        return false;
                    }
                }
            }
        }

        // 如果所有检查都通过，返回true
        return true;
    }
}
